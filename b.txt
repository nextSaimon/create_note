"use client"
import { useState, useRef } from 'react'
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from "@/components/ui/card"
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar"
import { User } from 'lucide-react'
import Link from 'next/link'

const SignupPage = ({ onSubmit, onLoginClick }) => {
  const [name, setName] = useState('')
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [image, setImage] = useState(null)
  const fileInputRef = useRef(null)

  

  const handleImageChange = (e) => {
    const file = e.target.files[0]
    if (file) {
      const reader = new FileReader()
      reader.onloadend = () => {
        setImage(reader.result)
      }
      reader.readAsDataURL(file)
    }
  }

  const handleAvatarClick = () => {
    fileInputRef.current.click()
  }
const handleSubmit = (e) => {
    e.preventDefault()
    const formData = new FormData()
    console.log(image);
    
    formData.append('name', name)
    formData.append('email', email)
    formData.append('password', password)
    formData.append('image', image)
    
    // send api request
    const res= fetch('/api/upload', {
      method: 'POST',
      body: formData
    })
  }
  return (
    <div className="flex items-center justify-center min-h-screen bg-gray-100">
      <Card className="w-full max-w-md">
        <CardHeader className="flex flex-col items-center justify-center text-center">
          <CardTitle>Sign Up</CardTitle>
          <CardDescription>Create a new account</CardDescription>
        </CardHeader>
        <form onSubmit={handleSubmit}>
          <CardContent className="space-y-4">
            <div className="flex flex-col items-center space-y-2">
              <Avatar className="w-24 h-24 cursor-pointer" onClick={handleAvatarClick}>
                {image ? (
                  <AvatarImage src={image} alt="Profile" />
                ) : (
                  <AvatarFallback>
                    <User className="w-12 h-12" />
                  </AvatarFallback>
                )}
              </Avatar>
              <Input
                id="image"
                type="file"
                accept="image/*"
                onChange={handleImageChange}
                className="hidden"
                ref={fileInputRef}
              />
              <Label htmlFor="image" className="cursor-pointer text-sm text-blue-500 hover:underline">
                Upload Profile Picture
              </Label>
            </div>
            <div className="space-y-2">
              <Label htmlFor="name">Name</Label>
              <Input
                id="name"
                type="text"
                placeholder="Enter your name"
                value={name}
                onChange={(e) => setName(e.target.value)}
                required
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="email">Email</Label>
              <Input
                id="email"
                type="email"
                placeholder="Enter your email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                required
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="password">Password</Label>
              <Input
                id="password"
                type="password"
                placeholder="Enter your password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                required
              />
            </div>
          </CardContent>
          <CardFooter className="flex flex-col space-y-4">
            <Button type="submit" className="w-full">Sign Up</Button>
            <p className="text-sm text-center">
              Already have an account?{' '}
              <Link href="/login" className="text-blue-500 hover:underline">
                Log in
              </Link>
            </p>
          </CardFooter>
        </form>
      </Card>
    </div>
  )
}



export default SignupPage









import { NextResponse } from "next/server";
import { connectToDatabase } from "@/lib/db";
import users from "@/models/user";
import cloudinary from "@/lib/cloudinary";

export async function POST(request) {
  try {
    const formData = await request.formData();
    const name = formData.get("name");
    const email = formData.get("email");
    const password = formData.get("password");
    const image = formData.get("image");
    console.log(image);
    
    if (!name || !email || !password|| !image) {
      return NextResponse.json({ error: "All fields are required" }, { status: 400 });
    }
    
    // buffer the image
    const imageBuffer = await image.arrayBuffer();
    const imageBase64 = Buffer.from(imageBuffer).toString("base64");

    // upload to cloudinary
    const uploadResponse = await cloudinary.uploader.upload(
      `data:${image.type};base64,${imageBase64}`,
      { folder: "nextjs_app" }
    );
    const publicId = uploadResponse.public_id;


    await connectToDatabase();

    const user = await users.create({
      name,
      email,
      password,
      image: publicId,
    });

    return NextResponse.json({message: "User created successfully", user}, {status: 201 })
  }catch (error) {
    console.error(error);
    return NextResponse.json({ error: "Error uploading image" }, { status: 500 });
  }}
